{"ast":null,"code":"var _jsxFileName = \"/Users/brandonwaddy/capstone-api/front/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport User from './components/User';\nimport Loading from \"./components/Loading\";\nimport Repo from \"./components/Repo\";\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // State for current user data\n  const [userData, setUserData] = useState({}); // State for current repo data\n\n  const [reposData, setReposData] = useState({});\n  const [isLoaded, setLoaded] = useState(false);\n  const [currRepo, setRepo] = useState(); // onLoad fetch /users/octocat\n\n  useEffect(() => {\n    fetch('/users/octocat').then(res => res.json()).then(result => {\n      // Set states\n      setUserData(result[0]);\n      setReposData(result[1]);\n      setLoaded(true);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const openRepo = e => {\n    const index = reposData.findIndex(x => x.id == e.id);\n    setRepo(reposData[index]);\n    const commitUrl = reposData[index].commits_url.splice[(0, -6)];\n    console.log(commitUrl);\n    fetch(reposData[index]).then(res => res.json()).then(result => {\n      // Set states\n      setUserData(result[0]);\n      setReposData(result[1]);\n      setLoaded(true);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: isLoaded ? /*#__PURE__*/_jsxDEV(User, {\n          userData: userData,\n          reposData: reposData,\n          isLoaded: isLoaded,\n          onClick: openRepo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/repo\",\n        element: /*#__PURE__*/_jsxDEV(Repo, {\n          repo: currRepo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"n8TZHYJPn2gc5nnyXrK/5Tc1vlg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/brandonwaddy/capstone-api/front/src/App.js"],"names":["useState","useEffect","User","Loading","Repo","BrowserRouter","Routes","Route","App","userData","setUserData","reposData","setReposData","isLoaded","setLoaded","currRepo","setRepo","fetch","then","res","json","result","catch","err","console","log","openRepo","e","index","findIndex","x","id","commitUrl","commits_url","splice"],"mappings":"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","sourcesContent":["import {useState, useEffect} from \"react\"\nimport User from './components/User';\nimport Loading from \"./components/Loading\";\nimport Repo from \"./components/Repo\";\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nfunction App() {\n  // State for current user data\n  const [userData, setUserData] = useState({});\n  // State for current repo data\n  const [reposData, setReposData] = useState({});\n  const [isLoaded, setLoaded] = useState(false);\n  const [currRepo, setRepo] = useState();\n\n  // onLoad fetch /users/octocat\n  useEffect(() =>{\n    fetch('/users/octocat')\n    .then(res=> \n        res.json()\n    )\n    .then(result => {\n        // Set states\n        setUserData(result[0]);\n        setReposData(result[1]);\n        setLoaded(true);\n    })\n    .catch(err=>{\n        console.log(err);\n    })\n}, []);\n\nconst openRepo = (e) => {\n  const index = reposData.findIndex(x => x.id == e.id);\n  setRepo(reposData[index]);\n  const commitUrl = reposData[index].commits_url.splice[0,-6]\n  console.log(commitUrl)\n  fetch(reposData[index])\n    .then(res=> \n        res.json()\n    )\n    .then(result => {\n        // Set states\n        setUserData(result[0]);\n        setReposData(result[1]);\n        setLoaded(true);\n    })\n    .catch(err=>{\n        console.log(err);\n    })\n  }\n\n  return (\n    <BrowserRouter>\n\n    <Routes>\n      <Route path='/' element= {isLoaded ?\n      <User userData = {userData} reposData = {reposData} isLoaded = {isLoaded}  onClick = {openRepo}/>:\n      <Loading />}/>\n      <Route path='/repo' element={<Repo repo={currRepo}/>}/>\n    </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}