{"ast":null,"code":"var _jsxFileName = \"/Users/brandonwaddy/capstone-api/front/src/components/Search.js\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = props => {\n  // On submit of search form trigger event 'searchUser'\n  const onSubmit = e => {\n    e.preventDefault();\n    const name = e.target[0].value;\n    props.searchUser(name);\n  }; // Variable to determine if user exists or not once search is complete\n\n\n  const userFound = props.userFound;\n  /* Result will be an element that either is a button that is a link to the user route, or an error message saying the user is\n  not found, depending on boolean 'userFound'*/\n\n  let result;\n\n  if (userFound === true) {\n    result = /*#__PURE__*/_jsxDEV(Link, {\n      to: \"user\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"result-btn\",\n        children: \"User found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (userFound === false) {\n    result = /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"error\",\n      children: \"User not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }, this);\n  }\n\n  return (\n    /*#__PURE__*/\n    // Render\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the GITHUB API search app!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Simply enter the username of the GITHUB account you would like to search for, click submit and you will be directed to a page with all the details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"months\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"eg. octocat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"btn\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/brandonwaddy/capstone-api/front/src/components/Search.js"],"names":["Link","Search","props","onSubmit","e","preventDefault","name","target","value","searchUser","userFound","result"],"mappings":";AAAA,SAAQA,IAAR,QAAmB,kBAAnB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB;AACA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAGF,CAAC,CAACG,MAAF,CAAS,CAAT,EAAYC,KAAzB;AACAN,IAAAA,KAAK,CAACO,UAAN,CAAiBH,IAAjB;AACD,GAJD,CAFwB,CAQxB;;;AACA,QAAMI,SAAS,GAAGR,KAAK,CAACQ,SAAxB;AAEA;AACF;;AACE,MAAIC,MAAJ;;AACA,MAAID,SAAS,KAAK,IAAlB,EAAwB;AACtBC,IAAAA,MAAM,gBAAI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,MAAT;AAAA,6BAAgB;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhB;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AACD,MAAID,SAAS,KAAK,KAAlB,EAAyB;AACvBC,IAAAA,MAAM,gBAAI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED;AAAA;AACE;AACA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAM,QAAA,QAAQ,EAAER,QAAhB;AAAA,gCACG;AAAO,UAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eACwC;AAAA;AAAA;AAAA;AAAA,gBADxC,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAO,UAAA,KAAK,EAAC,KAAb;AAAkB,UAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EAWGQ,MAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAiBD,CAtCD;;KAAMV,M;AAwCN,eAAeA,MAAf","sourcesContent":["import {Link} from 'react-router-dom'\n\nconst Search = (props) => {\n  // On submit of search form trigger event 'searchUser'\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const name = e.target[0].value;\n    props.searchUser(name);\n  }\n\n  // Variable to determine if user exists or not once search is complete\n  const userFound = props.userFound;\n\n  /* Result will be an element that either is a button that is a link to the user route, or an error message saying the user is\n  not found, depending on boolean 'userFound'*/\n  let result;\n  if (userFound === true) {\n    result = (<Link to='user'><button className='result-btn'>User found!</button></Link>)\n  }\n  if (userFound === false) {\n    result = (<h3 className='error'>User not found!</h3>)\n  }\n\n  return (\n    // Render\n    <div>\n      <h1>Welcome to the GITHUB API search app!</h1>\n      <p>Simply enter the username of the GITHUB account you would like to search for, click submit and you will be directed\n        to a page with all the details.\n      </p>\n      <br/>\n      <form onSubmit={onSubmit}>\n         <label for='months'>Username:</label><br/>\n          <input type='text' placeholder='eg. octocat'/>\n          <input class='btn'type='submit'/>\n        </form>\n      {result}\n      \n    </div>\n  )\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}